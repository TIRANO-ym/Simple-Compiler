using System;
using System.Collections.Generic;
using System.Text;
using System.Collections;
using System.IO;

namespace IISPLParserGenerator
{
   public class myLexicalAnalyzer : IISPLParserGenerator.IISPLLexicalAnalyzer 
    {
       

    /* hoemwork5.lex */
CSymbolTable st = new CSymbolTable();

public void Test(string path)
{
    install(path);
    install_reserved_words();
    do
    {
         yyoval="";
         string tok=(string)lexan();

         if(tok == "T_ws") {}
         else if(tok == "T_id"){
             Item item = st[(int)yyoval];
             Console.WriteLine(string.Format("{0}\t{1}\t{2}SymbolTable[{3}]",
                    tok.PadLeft(12), item.lexeme, item.attribute, yyoval));
         }
         else if (tok == "T_ereal" || tok == "T_real" || tok == "T_num" || tok == "T_relop")
             Console.WriteLine(string.Format("{0}\t{1}", tok.PadLeft(12), yyoval));
         else
             Console.WriteLine(string.Format("{0:10}", tok.PadLeft(12)));
    } while(!IsDone());
    Console.WriteLine(st.ToString());
    Console.ReadKey();
}
public void install_reserved_words() {
    st.Add("T_if", "if");
    st.Add("T_foreach", "foreach");
    st.Add("T_in", "in");
    st.Add("T_int", "int");
    st.Add("T_double", "double");
}
public int install_id(string lexeme){
    int idx=st.Look_Up(lexeme);
    if(idx != -1) return idx;
    st.Add("T_id", lexeme);
    return st.Count-1;
}
   protected override object Actions(int state)
   {
      switch (state)
       {
                  case 0:
                  case 1:{return("T_ws");}; break;
                  case 28:{yyoval=lexbuf; return("T_ereal");}; break;
                  case 3:
                  case 14:
                  case 15:{yyoval=install_id(lexbuf); return(st[(int)yyoval].token);}; break;
                  case 27:{yyoval=lexbuf; return("T_real");}; break;
                  case 2:{yyoval=lexbuf; return("T_num");}; break;
                  case 16:{yyoval=lexbuf; return("T_array");}; break;
                  case 17:
                  case 18:
                  case 19:
                  case 20:
                  case 21:{return(lexbuf);}; break;
                  case 5:
                  case 6:
                  case 7:
                  case 8:
                  case 9:{return(lexbuf);}; break;
                  case 10:
                  case 11:
                  case 22:
                  case 23:
                  case 24:{yyoval=lexbuf; return("T_relop");}; break;
                  default : return null;
        }
   }
    protected override void Install()
    {
           trans=new int[,]{
             {0,1,'\t'},
             {0,1,'\n'},
             {0,1,'\r'},
             {0,1,' '},
             {0,9,'('},
             {0,9,')'},
             {0,7,'*'},
             {0,6,'+'},
             {0,9,','},
             {0,5,'-'},
             {0,8,'/'},
             {0,2,'0'},
             {0,2,'1'},
             {0,2,'2'},
             {0,2,'3'},
             {0,2,'4'},
             {0,2,'5'},
             {0,2,'6'},
             {0,2,'7'},
             {0,2,'8'},
             {0,2,'9'},
             {0,9,';'},
             {0,10,'<'},
             {0,9,'='},
             {0,11,'>'},
             {0,3,'A'},
             {0,3,'B'},
             {0,3,'C'},
             {0,3,'D'},
             {0,3,'E'},
             {0,3,'F'},
             {0,3,'G'},
             {0,3,'H'},
             {0,3,'I'},
             {0,3,'J'},
             {0,3,'K'},
             {0,3,'L'},
             {0,3,'M'},
             {0,3,'N'},
             {0,3,'O'},
             {0,3,'P'},
             {0,3,'Q'},
             {0,3,'R'},
             {0,3,'S'},
             {0,3,'T'},
             {0,3,'U'},
             {0,3,'V'},
             {0,3,'W'},
             {0,3,'X'},
             {0,3,'Y'},
             {0,3,'Z'},
             {0,4,'['},
             {0,3,'a'},
             {0,3,'b'},
             {0,3,'c'},
             {0,3,'d'},
             {0,3,'e'},
             {0,3,'f'},
             {0,3,'g'},
             {0,3,'h'},
             {0,3,'i'},
             {0,3,'j'},
             {0,3,'k'},
             {0,3,'l'},
             {0,3,'m'},
             {0,3,'n'},
             {0,3,'o'},
             {0,3,'p'},
             {0,3,'q'},
             {0,3,'r'},
             {0,3,'s'},
             {0,3,'t'},
             {0,3,'u'},
             {0,3,'v'},
             {0,3,'w'},
             {0,3,'x'},
             {0,3,'y'},
             {0,3,'z'},
             {0,9,'{'},
             {0,9,'}'},
             {1,1,'\t'},
             {1,1,'\n'},
             {1,1,'\r'},
             {1,1,' '},
             {2,13,'.'},
             {2,2,'0'},
             {2,2,'1'},
             {2,2,'2'},
             {2,2,'3'},
             {2,2,'4'},
             {2,2,'5'},
             {2,2,'6'},
             {2,2,'7'},
             {2,2,'8'},
             {2,2,'9'},
             {2,12,'E'},
             {3,14,'0'},
             {3,14,'1'},
             {3,14,'2'},
             {3,14,'3'},
             {3,14,'4'},
             {3,14,'5'},
             {3,14,'6'},
             {3,14,'7'},
             {3,14,'8'},
             {3,14,'9'},
             {3,15,'A'},
             {3,15,'B'},
             {3,15,'C'},
             {3,15,'D'},
             {3,15,'E'},
             {3,15,'F'},
             {3,15,'G'},
             {3,15,'H'},
             {3,15,'I'},
             {3,15,'J'},
             {3,15,'K'},
             {3,15,'L'},
             {3,15,'M'},
             {3,15,'N'},
             {3,15,'O'},
             {3,15,'P'},
             {3,15,'Q'},
             {3,15,'R'},
             {3,15,'S'},
             {3,15,'T'},
             {3,15,'U'},
             {3,15,'V'},
             {3,15,'W'},
             {3,15,'X'},
             {3,15,'Y'},
             {3,15,'Z'},
             {3,15,'a'},
             {3,15,'b'},
             {3,15,'c'},
             {3,15,'d'},
             {3,15,'e'},
             {3,15,'f'},
             {3,15,'g'},
             {3,15,'h'},
             {3,15,'i'},
             {3,15,'j'},
             {3,15,'k'},
             {3,15,'l'},
             {3,15,'m'},
             {3,15,'n'},
             {3,15,'o'},
             {3,15,'p'},
             {3,15,'q'},
             {3,15,'r'},
             {3,15,'s'},
             {3,15,'t'},
             {3,15,'u'},
             {3,15,'v'},
             {3,15,'w'},
             {3,15,'x'},
             {3,15,'y'},
             {3,15,'z'},
             {4,16,']'},
             {5,17,'='},
             {6,18,'+'},
             {6,19,'='},
             {7,20,'='},
             {8,21,'='},
             {10,22,'='},
             {10,23,'>'},
             {11,24,'='},
             {12,26,'+'},
             {12,25,'-'},
             {13,27,'0'},
             {13,27,'1'},
             {13,27,'2'},
             {13,27,'3'},
             {13,27,'4'},
             {13,27,'5'},
             {13,27,'6'},
             {13,27,'7'},
             {13,27,'8'},
             {13,27,'9'},
             {14,14,'0'},
             {14,14,'1'},
             {14,14,'2'},
             {14,14,'3'},
             {14,14,'4'},
             {14,14,'5'},
             {14,14,'6'},
             {14,14,'7'},
             {14,14,'8'},
             {14,14,'9'},
             {14,15,'A'},
             {14,15,'B'},
             {14,15,'C'},
             {14,15,'D'},
             {14,15,'E'},
             {14,15,'F'},
             {14,15,'G'},
             {14,15,'H'},
             {14,15,'I'},
             {14,15,'J'},
             {14,15,'K'},
             {14,15,'L'},
             {14,15,'M'},
             {14,15,'N'},
             {14,15,'O'},
             {14,15,'P'},
             {14,15,'Q'},
             {14,15,'R'},
             {14,15,'S'},
             {14,15,'T'},
             {14,15,'U'},
             {14,15,'V'},
             {14,15,'W'},
             {14,15,'X'},
             {14,15,'Y'},
             {14,15,'Z'},
             {14,15,'a'},
             {14,15,'b'},
             {14,15,'c'},
             {14,15,'d'},
             {14,15,'e'},
             {14,15,'f'},
             {14,15,'g'},
             {14,15,'h'},
             {14,15,'i'},
             {14,15,'j'},
             {14,15,'k'},
             {14,15,'l'},
             {14,15,'m'},
             {14,15,'n'},
             {14,15,'o'},
             {14,15,'p'},
             {14,15,'q'},
             {14,15,'r'},
             {14,15,'s'},
             {14,15,'t'},
             {14,15,'u'},
             {14,15,'v'},
             {14,15,'w'},
             {14,15,'x'},
             {14,15,'y'},
             {14,15,'z'},
             {15,14,'0'},
             {15,14,'1'},
             {15,14,'2'},
             {15,14,'3'},
             {15,14,'4'},
             {15,14,'5'},
             {15,14,'6'},
             {15,14,'7'},
             {15,14,'8'},
             {15,14,'9'},
             {15,15,'A'},
             {15,15,'B'},
             {15,15,'C'},
             {15,15,'D'},
             {15,15,'E'},
             {15,15,'F'},
             {15,15,'G'},
             {15,15,'H'},
             {15,15,'I'},
             {15,15,'J'},
             {15,15,'K'},
             {15,15,'L'},
             {15,15,'M'},
             {15,15,'N'},
             {15,15,'O'},
             {15,15,'P'},
             {15,15,'Q'},
             {15,15,'R'},
             {15,15,'S'},
             {15,15,'T'},
             {15,15,'U'},
             {15,15,'V'},
             {15,15,'W'},
             {15,15,'X'},
             {15,15,'Y'},
             {15,15,'Z'},
             {15,15,'a'},
             {15,15,'b'},
             {15,15,'c'},
             {15,15,'d'},
             {15,15,'e'},
             {15,15,'f'},
             {15,15,'g'},
             {15,15,'h'},
             {15,15,'i'},
             {15,15,'j'},
             {15,15,'k'},
             {15,15,'l'},
             {15,15,'m'},
             {15,15,'n'},
             {15,15,'o'},
             {15,15,'p'},
             {15,15,'q'},
             {15,15,'r'},
             {15,15,'s'},
             {15,15,'t'},
             {15,15,'u'},
             {15,15,'v'},
             {15,15,'w'},
             {15,15,'x'},
             {15,15,'y'},
             {15,15,'z'},
             {25,28,'0'},
             {25,28,'1'},
             {25,28,'2'},
             {25,28,'3'},
             {25,28,'4'},
             {25,28,'5'},
             {25,28,'6'},
             {25,28,'7'},
             {25,28,'8'},
             {25,28,'9'},
             {26,28,'0'},
             {26,28,'1'},
             {26,28,'2'},
             {26,28,'3'},
             {26,28,'4'},
             {26,28,'5'},
             {26,28,'6'},
             {26,28,'7'},
             {26,28,'8'},
             {26,28,'9'},
             {27,27,'0'},
             {27,27,'1'},
             {27,27,'2'},
             {27,27,'3'},
             {27,27,'4'},
             {27,27,'5'},
             {27,27,'6'},
             {27,27,'7'},
             {27,27,'8'},
             {27,27,'9'},
             {27,12,'E'},
             {28,28,'0'},
             {28,28,'1'},
             {28,28,'2'},
             {28,28,'3'},
             {28,28,'4'},
             {28,28,'5'},
             {28,28,'6'},
             {28,28,'7'},
             {28,28,'8'},
            {28,28,'9'}};
            FinalStates=new int[]{0,1,28,3,14,15,27,0,2,16,17,18,19,20,21,5,6,7,8,9,10,11,22,23,24};
            Lookaheads=new string[]{"0,1;;","28;;","3,14,15;;","27;;","0,2;;","16;;","17,18,19,20,21;;","5,6,7,8,9;;","10,11,22,23,24;;"};                
       }
    }
}